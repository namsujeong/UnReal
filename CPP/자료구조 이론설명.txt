1. 자료구조(data structure)?
1-1 기본적으로 자료구조는 컴퓨터 프로그래밍에서만 사용하는건 아닙니다.
1-2 n개의 자료를 어떤상황에서 어떻게 배치하는게 효율적인가에 대한이론

2. 컴퓨터 공학에서 자료구조는
2-1 n바이트를 어떤 상황에서 램에 어떻게 배치 시킬 것인가?
2-2 대부분의 자료구조의 배치나 형태등은 정의가 되었다.
   2-2-0. 이렇게 자료를 배치하니까 아 이럴때 편하고 이런에 이용할 수 있다.
   2-2-1. 해시 테이블
   2-2-2. 이진 트리

3. 객체지향 프로그래밍 언어에서 자료구조는
=> 언어 문법으로 저 2-2의 정의들을 어떻게 언어적으로 표현하고 풀어낼 것이냐.

4. 선생님은 그래서 자료구조를 다음과 같이 파악합니다.
   1. 메모리의 형태(배열이냐 노드냐)
   2. 이 자료구조를 컴퓨터 공학에서는 컨테이너라고 구분합니다.
      시퀸스 컨테이너
      연관 컨테이너
      어뎁터 컨테이너

   특정 자료형를 보관하는 배열형 시퀸스컨테이너
   특정 자료형를 보관하는 노드형 시퀸스컨테이너
   특정 자료형를 보관하는 노드형 연관 컨테이너
   특정 자료형를 보관하는 노드형 어뎁터 컨테이너

   int를 보관하는 노드형 어뎁터 컨테이너

   0123456789
   [4][4][4][4][4][4][4][4][4][4]
   램에

// 데이터를 넣는다는 행위를 했는데.
// 자료구조 내부에서 데이터가 순서가 바뀌어있다면 연관
// 그냥 순서대로 들어가 있다면 시퀸스
// 순서가 바뀌어 있는지
// 바뀌어 있지 않은지 어떻게 알수가 있나요?

100, 200, 80

시퀸스 컨테너이너 : 내가 데이터를 넣었을때 데어터가 순서대로 들어가면 시퀸스 컨테이너이다.
[100][200][80]

연관 컨테너이너 : 내가 데이터를 넣었을때 데이터의 순서가 바뀌면 연관컨테이너 입니다.
               => 정렬한다는 의미가 아닙니다.
               => 뭔가 데이터의 순서가 바뀌면 무조건 연관
[200][80][100]

여러분들이 자료구조를 파악할때 먼저 파악해야 함수는 다음과 같습니다.
// 어떤 방법으로 넣어주고 어떤 방법으로 삭제할지 알수가 없어요
1. 자료를 넣어주는 인터페이스(방법) 
2. 자료를 삭제하는 인터페이스(방법) 
  2-1. 데이터 1개를 삭제하는 방법  
  2-2. 데이터를 전부 지우는 함수도 같이 파악
3. 자료를 순회하는 인터페이스
  3-1. 자료를 전부다 접근하는 방법
  * 자료를 전부다 순회하는 방법을 사용했는데 내가 데이터를 넣어준 순서가 그대로라면
  => 시퀸스 컨테너이너
  * 자료를 전부다 순회하는 방법을 사용했는데 내가 데이터를 넣어준 순서가 달라졌다면
  => 연관 컨테이너

vector list map
=> 직접 꼭 구현해봐야 하고
=> 회사에 들어가는 일이 생긴다면
=> 실기 면접때 구현해 보라고 하는 일도 많습니다.


