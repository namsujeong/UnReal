// 006_Bit.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include <iostream>

int main()
{
    int Value = 1;
    Value = 3;

    // 2진수를 그대로 넣어줄수가 있습니다.
    Value = 0b00000000000000000000000000000000;
    Value = 0b00000000000000000000000000000001;
    Value = 0b00000000000000000000000000000010;
    Value = 0b00000000000000000000000000000100;
    Value = 0b00000000000000000000000000001000;
    Value = 0b00000000000000000000000000010000;
    Value = 0b00000000000000000000000000100000;
    Value = 0b00000000000000000000000001000000;

    Value = 0b00000000000000000000000000000011;

    //                                       1
    Value = 0b10000000000000000000000000000000; // -1 + -1
    Value = 0b01111111111111111111111111111111; // 0

    int Left  = 0b00000000000000000000000000000001;
    int Right = 0b00000000000000000000000000000010;//

    //          0b00000000000000000000000000000001;
    //          0b00000000000000000000000000000010;
    // Result = 0b00000000000000000000000000000011;                              11

    int Result = Left | Right;

    //          0b00000000000000000000000000000001;
    //          0b00000000000000000000000000000010;
    // Result = 0b00000000000000000000000000000000;
    // 둘다 1이어야만 비트가 1이 됩니다.
    Result = Left & Right;

    // 배타적 논리합
    //          0b00000000000000000000000000000001;
    //          0b00000000000000000000000000000011;
    // Result = 0b00000000000000000000000000000000;
    // 둘디 다르면 1 같으면 0

    Right = 3;

    Result = Left ^ Right;

    // 0b11111111111111111111111111111111111111
    Result = ~0;

    // 0b00000000000000000000000000000000000001
    // 0b00000000000000000000000000000000000010
    Result = 1 << 1;
    Result = 1 >> 1;

    int Value = 100;

    // 다시 Value에다가 넣어라 
    // 이게 너무나도 귀찮으므로 축약해서 사용할수 있는
    // 연산자를 만들어 냈다.
    Value = Value + 10;
    Value += 10;
    Value -= 10;
    Value *= 10;
    Value /= 10;

}

// 프로그램 실행: <Ctrl+F5> 또는 [디버그] > [디버깅하지 않고 시작] 메뉴
// 프로그램 디버그: <F5> 키 또는 [디버그] > [디버깅 시작] 메뉴

// 시작을 위한 팁: 
//   1. [솔루션 탐색기] 창을 사용하여 파일을 추가/관리합니다.
//   2. [팀 탐색기] 창을 사용하여 소스 제어에 연결합니다.
//   3. [출력] 창을 사용하여 빌드 출력 및 기타 메시지를 확인합니다.
//   4. [오류 목록] 창을 사용하여 오류를 봅니다.
//   5. [프로젝트] > [새 항목 추가]로 이동하여 새 코드 파일을 만들거나, [프로젝트] > [기존 항목 추가]로 이동하여 기존 코드 파일을 프로젝트에 추가합니다.
//   6. 나중에 이 프로젝트를 다시 열려면 [파일] > [열기] > [프로젝트]로 이동하고 .sln 파일을 선택합니다.
